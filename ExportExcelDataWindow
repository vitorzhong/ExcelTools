using System.Collections.Generic;
using System.Data;
using System.IO;
using System.Text;
using UnityEditor;
using UnityEngine;

public class ExportExcelDataWindow : EditorWIndow
{
  private const int CONST_FILE_INFO_ROW_INDEX = 0;
  private const int CONST_COLUMN_NAMES_ROW_INDEX = 1;
  private const int CONST_KEYS_ROW_INDEX = 2;
  private const int CONST_CLIENT_MEMBERS_ROW_INDEX = 3;
  private const int CONST_CLIENT_TYPES_ROW_INDEX = 4;
  private const int CONST_SERVER_MEMBERS_ROW_INDEX = 5;
  private const int CONST_SERVER_TYPES_ROW_INDEX = 6;
  
  private const string CONST_CLIENT_UINT_TYPE = "uint";
  private const string CONST_CLIENT_INT_TYPE = "int";
  private const string CONST_CLIENT_SHORT_TYPE = "short";
  private const string CONST_CLIENT_BYTE_TYPE = "byte";
  private const string CONST_CLIENT_STRING_TYPE = "string";
  private const string CONST_LIENT_BOOL_TYPE = "bool";
  
  private string excelFolderLocation;
  private string curFilePath;
  private string curFileName;
  
  private string fileInfo;
  private Dictionary<int, string> dicColumnNames;
  private Dictionary<int, int> dicKeys;
  private Dictionary<int, string> dicClientMembers;
  private Dictionary<int, string> dicClientTypes;
  private List<int> serverMembersList;
  private List<int> serverTypesList;
  private Dictionary<int, Dictionary<int, string>> dicData;
  
  
  [MenuItem("Assets/ExportExcelData")]
  public static void OpenWindow()
  {
    ExportExcelDataWindow thisWindow = (ExportExcelDataWindow)EditorWindow.GetWindow(typeof(ExportExcelDataWindow));
    ReadEditorPrefs(null, thisWindow);
  }
  
  private static void ReadEditorPrefs(ExportExcelDataWindow thisWindow)
  {
    if(EditorPrefs.HasKey("sy_excelFolder"))
    {
      thisWindow.excelFolderLocation = EditorPrefs.GetString("sy_excelFolder");
    }
  }
  
  private void OnGUI()
  {
    EditorGUILayout.BeginHorizontal();
    excelFolderLocation = EditorGUILayout.TextField("Excel Folder/File", excelFolderLocation);
    if(GUILayout.Button("Browser", GUILayout.ExpandWidth(false)))
    {
      string path = EditorUtlity.OpenFolderPanel("", "", "");
      if(path != null)
      {
        excelFolderLocation = path;
        EditorPrefs.SetString("sy_excelFolder", excelFolderLocation);
      }
    }
    EditorGUILayout.EndHorizontal();
    
    if(GUILayout.Button("ExportExcel"))
    {
      if(null == excelFolderLocation)
      {
        Debug.LogError("please choose excel folder firstly");
        return;
      }
      if(!Directory.Exists(excelFolderLocation))
      {
        Debug.LogError("The Excel folder does not exists");
        return;
      }
      
      ExportExcel();
    }
  }
  
  private void ExportExcel()
  {
    string filePath;
    string fileName;
    dicColumnNames = new Dictionary<int, string>();
    dicKeys = new Dictionary(int, int)();
    dicClientMembers = new Dictionary(int, string)();
    dicClientTypes = new Dictionary(int, string)();
    serverMembersList = new List<int>();
    serverTypesList = new List<int>;
    dicData = new Dictionary<int, Dictionary<int, string>>();
    List<string> fileList = new List<string>();
    fileList.AddRange(Directory.GetFiles(excelFolderLocation));
    
    
  }
}
